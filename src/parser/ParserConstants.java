/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DEFINITION = 5;
  /** RegularExpression Id. */
  int EXECUTE = 6;
  /** RegularExpression Id. */
  int REPFINAL = 7;
  /** RegularExpression Id. */
  int AGENTID = 8;
  /** RegularExpression Id. */
  int AUTHOR = 9;
  /** RegularExpression Id. */
  int AUTHMAIL = 10;
  /** RegularExpression Id. */
  int DATE = 11;
  /** RegularExpression Id. */
  int COMMENT = 12;
  /** RegularExpression Id. */
  int OBS = 13;
  /** RegularExpression Id. */
  int MIGRATE = 14;
  /** RegularExpression Id. */
  int TO = 15;
  /** RegularExpression Id. */
  int TRACE = 16;
  /** RegularExpression Id. */
  int CLONE = 17;
  /** RegularExpression Id. */
  int RUN = 18;
  /** RegularExpression Id. */
  int FROM = 19;
  /** RegularExpression Id. */
  int COMPUTE = 20;
  /** RegularExpression Id. */
  int REPCALLBACK = 21;
  /** RegularExpression Id. */
  int REPMAIL = 22;
  /** RegularExpression Id. */
  int SMTP = 23;
  /** RegularExpression Id. */
  int COMMA = 24;
  /** RegularExpression Id. */
  int POINT = 25;
  /** RegularExpression Id. */
  int DPOINT = 26;
  /** RegularExpression Id. */
  int LPAR = 27;
  /** RegularExpression Id. */
  int RPAR = 28;
  /** RegularExpression Id. */
  int DATE_STRING = 29;
  /** RegularExpression Id. */
  int SEMICOL = 30;
  /** RegularExpression Id. */
  int CONSTANT = 31;
  /** RegularExpression Id. */
  int DIGIT = 32;
  /** RegularExpression Id. */
  int LETTER = 33;
  /** RegularExpression Id. */
  int CAPLET = 34;
  /** RegularExpression Id. */
  int DOLLAR = 35;
  /** RegularExpression Id. */
  int CLASSNAME = 36;
  /** RegularExpression Id. */
  int STRING = 37;
  /** RegularExpression Id. */
  int OBRACE = 38;
  /** RegularExpression Id. */
  int CBRACE = 39;
  /** RegularExpression Id. */
  int OUTPUT = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"definition\"",
    "\"execute\"",
    "\"reportfinal\"",
    "\"agentID\"",
    "\"author\"",
    "\"author-email\"",
    "\"date\"",
    "\"comment\"",
    "\"obs\"",
    "\"migrate\"",
    "\"to\"",
    "\"trace\"",
    "\"clone\"",
    "\"run\"",
    "\"from\"",
    "\"compute\"",
    "\"reportcallback\"",
    "\"reportmail\"",
    "\"smtp\"",
    "\",\"",
    "\".\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "<DATE_STRING>",
    "\";\"",
    "<CONSTANT>",
    "<DIGIT>",
    "<LETTER>",
    "<CAPLET>",
    "\"$\"",
    "<CLASSNAME>",
    "<STRING>",
    "\"{\"",
    "\"}\"",
    "\"output\"",
  };

}
